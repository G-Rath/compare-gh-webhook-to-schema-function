/* tslint:disable */
import { Installation, Organization, Repository, User } from '../common';
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface StatusEvent {
  id: number;
  sha: string;
  name: string;
  avatar_url?: string | null;
  target_url: string | null;
  context: string;
  description: string | null;
  state: 'pending' | 'success' | 'failure' | 'error';
  commit: {
    sha: string;
    node_id: string;
    commit: {
      author: {
        name: string;
        email: string;
        date: string;
      };
      committer: {
        name: string;
        email: string;
        date: string;
      };
      message: string;
      tree: {
        sha: string;
        url: string;
      };
      url: string;
      comment_count: number;
      verification: {
        verified: boolean;
        reason:
          | 'expired_key'
          | 'not_signing_key'
          | 'gpgverify_error'
          | 'gpgverify_unavailable'
          | 'unsigned'
          | 'unknown_signature_type'
          | 'no_user'
          | 'unverified_email'
          | 'bad_email'
          | 'unknown_key'
          | 'malformed_signature'
          | 'invalid'
          | 'valid';
        signature: string | null;
        payload: string | null;
      };
    };
    url: string;
    html_url: string;
    comments_url: string;
    author: User;
    committer: User;
    parents: unknown[];
  };
  branches: {
    name: string;
    commit: {
      sha: string;
      url: string;
    };
    protected: boolean;
  }[];
  created_at: string;
  updated_at: string;
  repository: Repository;
  sender: User;
  installation?: Installation;
  organization?: Organization;
}
