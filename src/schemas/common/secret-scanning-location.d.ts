/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type SecretScanningLocation =
  | {
      /**
       * The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found.
       */
      type: 'commit';
      details: SecretScanningLocationCommit;
    }
  | {
      /**
       * The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found.
       */
      type: 'issue_title';
      details: SecretScanningLocationIssueTitle;
    }
  | {
      /**
       * The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found.
       */
      type: 'issue_body';
      details: SecretScanningLocationIssueBody;
    }
  | {
      /**
       * The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found.
       */
      type: 'issue_comment';
      details: SecretScanningLocationIssueComment;
    };

/**
 * Represents a 'commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository.
 */
export interface SecretScanningLocationCommit {
  /**
   * The file path in the repository
   */
  path: string;
  /**
   * Line number at which the secret starts in the file
   */
  start_line: number;
  /**
   * Line number at which the secret ends in the file
   */
  end_line: number;
  /**
   * The column at which the secret starts within the start line when the file is interpreted as 8BIT ASCII
   */
  start_column: number;
  /**
   * The column at which the secret ends within the end line when the file is interpreted as 8BIT ASCII
   */
  end_column: number;
  /**
   * SHA-1 hash ID of the associated blob
   */
  blob_sha: string;
  /**
   * The API URL to get the associated blob resource
   */
  blob_url: string;
  /**
   * SHA-1 hash ID of the associated commit
   */
  commit_sha: string;
  /**
   * The API URL to get the associated commit resource
   */
  commit_url: string;
}
/**
 * Represents an 'issue_title' secret scanning location type. This location type shows that a secret was detected in the title of an issue.
 */
export interface SecretScanningLocationIssueTitle {
  /**
   * The API URL to get the issue where the secret was detected.
   */
  issue_title_url: string;
}
/**
 * Represents an 'issue_body' secret scanning location type. This location type shows that a secret was detected in the body of an issue.
 */
export interface SecretScanningLocationIssueBody {
  /**
   * The API URL to get the issue where the secret was detected.
   */
  issue_body_url: string;
}
/**
 * Represents an 'issue_comment' secret scanning location type. This location type shows that a secret was detected in a comment on an issue.
 */
export interface SecretScanningLocationIssueComment {
  /**
   * The API URL to get the issue comment where the secret was detected.
   */
  issue_comment_url: string;
}
