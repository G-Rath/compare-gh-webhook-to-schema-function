/* tslint:disable */
import {
  DependabotAlertPackage,
  SecurityAdvisoryCvss,
  SecurityAdvisoryCwes,
  User
} from '.';
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A Dependabot alert.
 */
export interface DependabotAlert {
  /**
   * The security alert number.
   */
  number: number;
  /**
   * The state of the Dependabot alert.
   */
  state: 'dismissed' | 'fixed' | 'open';
  /**
   * Details for the vulnerable dependency.
   */
  dependency: {
    package: DependabotAlertPackage;
    /**
     * The full path to the dependency manifest file, relative to the root of the repository.
     */
    manifest_path: string;
    /**
     * The execution scope of the vulnerable dependency.
     */
    scope: 'development' | 'runtime' | null;
  };
  /**
   * Details for the GitHub Security Advisory.
   */
  security_advisory: {
    /**
     * Details for the GitHub Security Advisory.
     */
    ghsa_id: string;
    /**
     * The unique CVE ID assigned to the advisory.
     */
    cve_id: string | null;
    /**
     * A short, plain text summary of the advisory.
     */
    summary: string;
    /**
     * A long-form Markdown-supported description of the advisory.
     */
    description: string;
    /**
     * Vulnerable version range information for the advisory.
     */
    vulnerabilities: {
      package: DependabotAlertPackage;
      /**
       * The severity of the vulnerability.
       */
      severity: 'low' | 'medium' | 'high' | 'critical';
      /**
       * Conditions that identify vulnerable versions of this vulnerability's package.
       */
      vulnerable_version_range: string;
      /**
       * Details pertaining to the package version that patches this vulnerability.
       */
      first_patched_version: {
        /**
         * The package version that patches this vulnerability.
         */
        identifier: string;
      };
    }[];
    /**
     * The severity of the advisory.
     */
    severity: 'low' | 'medium' | 'high' | 'critical';
    cvss: SecurityAdvisoryCvss;
    /**
     * Details for the advisory pertaining to Common Weakness Enumeration.
     */
    cwes: SecurityAdvisoryCwes[];
    /**
     * Values that identify this advisory among security information sources.
     */
    identifiers: {
      /**
       * The type of advisory identifier.
       */
      type: 'CVE' | 'GHSA';
      /**
       * The value of the advisory identifer.
       */
      value: string;
    }[];
    /**
     * Links to additional advisory information.
     */
    references: {
      /**
       * The URL of the reference.
       */
      url: string;
    }[];
    /**
     * The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    published_at: string;
    /**
     * The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    updated_at: string;
    /**
     * The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    withdrawn_at: string | null;
  };
  /**
   * Details pertaining to one vulnerable version range for the advisory.
   */
  security_vulnerability: {
    package: DependabotAlertPackage;
    /**
     * The severity of the vulnerability.
     */
    severity: 'low' | 'medium' | 'high' | 'critical';
    /**
     * Conditions that identify vulnerable versions of this vulnerability's package.
     */
    vulnerable_version_range: string;
    /**
     * Details pertaining to the package version that patches this vulnerability.
     */
    first_patched_version: {
      /**
       * The package version that patches this vulnerability.
       */
      identifier: string;
    };
  };
  /**
   * The REST API URL of the alert resource.
   */
  url: string;
  /**
   * The GitHub URL of the alert resource.
   */
  html_url: string;
  /**
   * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  created_at: string;
  /**
   * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  updated_at: string;
  /**
   * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  dismissed_at: string | null;
  dismissed_by: User | null;
  /**
   * The reason that the alert was dismissed.
   */
  dismissed_reason:
    | 'fix_started'
    | 'inaccurate'
    | 'no_bandwidth'
    | 'not_used'
    | 'tolerable_risk'
    | null;
  /**
   * An optional comment associated with the alert's dismissal.
   */
  dismissed_comment: string | null;
  /**
   * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  fixed_at: string | null;
}
